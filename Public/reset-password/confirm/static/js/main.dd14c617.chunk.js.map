{"version":3,"sources":["checkToken.js","App.js","reportWebVitals.js","index.js"],"names":["checkToken","token","successCallback","failCallback","$","ajax","type","url","data","error","response","success","getQueryVariable","variable","vars","window","location","search","substring","split","i","length","pair","console","log","App","Form","useForm","form","useState","setToken","useEffect","tempToken","setFieldsValue","responseFail","Modal","title","content","onOk","href","className","style","textAlign","maxWidth","name","onFinish","value","notification","message","description","resetFields","onFinishFailed","errorInfo","layout","initialValues","password","confirm_password","Item","hidden","label","help","rules","required","min","Password","getFieldValue","validator","_","Promise","reject","Error","resolve","float","htmlType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd14c617.chunk.js","sourcesContent":["import $ from 'jquery'\r\n\r\nfunction checkToken( token, successCallback, failCallback){\r\n    $.ajax({\r\n        type: 'POST',\r\n        url: 'https://sv-communityadvocates.org/api/react/reset-password/validate_token/',\r\n        data: {\r\n            'token': token,\r\n        },\r\n        error:function(response){\r\n            if (failCallback)\r\n                failCallback(response);\r\n        },\r\n        success: function(response){\r\n            if (successCallback)\r\n                successCallback(response);\r\n        }\r\n    })\r\n}\r\n\r\nexport default checkToken;","\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport {Form, Input, Button, notification, Modal} from 'antd';\nimport $ from 'jquery';\nimport { useEffect, useState } from 'react';\nimport checkToken from './checkToken';\n\nfunction getQueryVariable(variable)\n{\n        var query = window.location.search.substring(1);\n        var vars = query.split(\"&\");\n        for (var i=0;i<vars.length;i++) {\n                    var pair = vars[i].split(\"=\");\n                    console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n          if(pair[0] == variable){return pair[1];}\n        }\n        return(1);\n}\n\nfunction App() {\n  const [form] = Form.useForm();\n  const [token, setToken] = useState(null);\n\n\n  const onFinish = (value) =>{\n    console.log(value);\n    $.ajax({\n      type: 'POST',\n      url: 'https://sv-communityadvocates.org/api/react/reset-password/confirm/',\n      data: value,\n      error:function(response){\n          console.log(response);\n          notification['error']({\n              message: 'Password update failed',\n              description: 'An error happened!'\n          })\n          \n      },\n      success: function(response){\n          console.log(response);\n          form.resetFields();\n          notification.success({\n              message: 'Password update successfully',\n              description: 'Your password has beed update successfully'\n          })\n          Modal.success({\n            content: \"You password has been updated, you will now be redirected to the login page\",\n            onOk(){\n              window.location.href = \"/admin/login/\";\n            }\n          })\n      }\n  })\n  }\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  useEffect(() => {\n    \n    \n    let tempToken = getQueryVariable('token')\n    // console.log(token);\n    checkToken(tempToken, (response) => {\n        tempToken? form.setFieldsValue({'token':tempToken}) : form.setFieldsValue({'token':'-1'});\n    }, (responseFail) => {\n\n      Modal.error({\n        title: 'Invalid token',\n        content: 'The link seems to be broken, please request a new link.',\n        onOk(){\n          window.location.href = \"/reset-password/\";\n        },\n      });\n\n    });\n    setToken(getQueryVariable('token'));\n  },[])\n\n  return (\n    \n    <div className=\"container mainpage my-5\">\n      <h2 style={{textAlign:\"center\"}}>Reset password</h2>\n      <div className=\"container\">\n        <Form\n          className=\"form-part\"\n          style={{maxWidth: \"720px\"}}\n          name=\"reset-password\"\n          form = {form}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          layout=\"vertical\"\n          initialValues={{\n            password: '',\n            confirm_password: '',\n            token: '',\n          }}\n          >\n            <Form.Item hidden={true} name=\"token\">\n              <input></input>\n            </Form.Item>\n            <Form.Item label=\"New password\" name=\"password\"\n              help=\"Your password need to have at least 8 characters\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your new password!\",\n                  min:8,\n                }\n              ]}\n            >\n              <Input.Password/>\n            </Form.Item>\n            \n            <Form.Item label=\"Confirm password\" name=\"confirm_password\"\n              \n              rules={[\n                {\n                    required: true,\n                    message: \"Please input your new password again!\",\n                    \n                },\n                ({ getFieldValue }) => ({\n                    validator(_, value) {\n                        if (!value || getFieldValue('password') === value) {\n                            return Promise.resolve();\n                        }\n                      \n                        return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                    },\n                }),\n            ]}\n            >\n              <Input.Password/>\n            </Form.Item>\n\n            <Form.Item\n                style={{float: 'right'}} \n                // wrapperCol={{\n                // offset: 22,\n                // // span: 4,\n                // }}\n            >\n                <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n              </Form.Item>\n\n        </Form>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}