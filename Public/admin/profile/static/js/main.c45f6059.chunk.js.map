{"version":3,"sources":["login.js","AccountInfo.js","DeviceList.js","ChangePassword.js","tools.js/logouyAll.js","App.js","reportWebVitals.js","index.js"],"names":["getLogin","callback","localStorage","token","$","ajax","type","url","headers","success","response","error","console","log","window","location","replace","href","AccountInfo","props","useState","userData","setUserData","infoForm","useFormik","initialValues","username","first_name","last_name","email","password","onSubmit","values","id","data","notification","message","description","useEffect","setFieldValue","touched","className","orientation","handleSubmit","htmlFor","readOnly","getFieldProps","DeviceList","devicesData","setDevicesData","current","pageSize","total","pagination","setPagination","loading","getDevices","results","count","columns","title","dataIndex","key","render","created","Date","parse","toString","onClick","logOut","class","style","margin","dataSource","onChange","tablePagination","tableFilter","tableSorter","page","ChangePassword","Form","useForm","form","name","layout","old_password","new_password","repeat_new_password","onFinish","responseJSON","detail","callbackSuccess","callbackFail","resetFields","signout","response2","onFinishFailed","err","Item","label","rules","required","hasFeedback","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","valuePropName","float","Content","Layout","Sider","App","toggle","setState","collapsed","state","checkPermission","perm","successcallback","failcallback","isSuperUser","groups","firstname","bind","siteName","this","theme","trigger","collapsible","permission_groups","selected","background","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c45f6059.chunk.js","sourcesContent":["import $ from 'jquery';\r\n// check if already have a token\r\n// and check if the token is valie/user is logged in\r\nfunction saveLogin(){\r\n    if (localStorage.token){\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: '/api/react/myinfo/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            success: function(response){\r\n                localStorage.setItem('username', response.username);\r\n                localStorage.setItem('first_name', response.first_name);\r\n                localStorage.setItem('last_name', response.last_name);\r\n                localStorage.setItem('email', response.email);\r\n            },\r\n            error: function(){\r\n                localStorage.removeItem(\"token\");\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getLogin = (callback) => {\r\n    if (localStorage.token){\r\n        $.ajax({\r\n            type: 'GET',\r\n            url: 'https://sv-communityadvocates.org/api/react/myinfo/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            success: function(response){\r\n                callback(response);\r\n            },\r\n            error: function(){\r\n                console.log('error');\r\n                \r\n                // alert(\"Log in fail\");\r\n                window.location.replace(\"/admin/login?redirect=\"+window.location.href); //redirect to the login page\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        //no token, redirect to the login page to get token\r\n        window.location.replace(\"/admin/login?redirect=\"+window.location.href); //redirect to the login page\r\n    }\r\n}\r\n\r\n\r\n","import { useFormik, useFormikContext } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { getLogin } from './login';\r\nimport $ from 'jquery';\r\nimport 'antd/dist/antd.css';\r\nimport { Divider, notification } from 'antd';\r\n\r\nfunction AccountInfo(props){\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    \r\n    // getLogin((response) => {\r\n    //     setUserData(response);\r\n    //     infoForm.setValues(\"first_name\", response.first_name);\r\n        \r\n    // })\r\n\r\n    const infoForm = useFormik({\r\n        initialValues:{\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password:'',\r\n        },\r\n        onSubmit: values =>{\r\n            console.log(values);\r\n            $.ajax({\r\n                type: 'PATCH',\r\n                url: 'https://sv-communityadvocates.org/api/react/user/' + userData.id +'/',\r\n                data: values,\r\n                headers: {\r\n                    'Authorization': 'token ' + localStorage.token\r\n                },\r\n                error:function(response){\r\n                    console.log(response);\r\n                    notification['error']({\r\n                        message: 'Update failed',\r\n                        description: 'An error happened!',\r\n                    });\r\n\r\n                    //update login data again\r\n                    getLogin((response) => {\r\n                        setUserData(response);\r\n                    })\r\n                },\r\n                success: function(response){\r\n                    console.log(response);\r\n                    notification['success']({\r\n                        message: 'Update successfully',\r\n                        description: 'Your account information has beed update successfully'\r\n                    })\r\n\r\n                    //update login data again\r\n                    getLogin((response) => {\r\n                        setUserData(response);\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n        getLogin((response) => {\r\n                \r\n                \r\n                // infoForm.setFieldValue(\"first_name\", response.first_name);\r\n                // infoForm.setFieldValue(\"last_name\", response.first_name);\r\n                // infoForm.setFieldValue(\"email\", response.email);\r\n                infoForm.setFieldValue(\"email\", response.email);\r\n                infoForm.setFieldValue(\"first_name\", response.first_name);\r\n                infoForm.setFieldValue(\"last_name\", response.last_name);\r\n                infoForm.setFieldValue(\"username\", response.username);\r\n                \r\n\r\n                // infoForm.values.email = response.email;\r\n                setUserData(response);\r\n                console.log(infoForm);\r\n    })\r\n    },[]);\r\n\r\n    useEffect(() =>{\r\n        if (infoForm.values.email && infoForm.touched.email)\r\n            infoForm.setFieldValue('username', infoForm.values.email);\r\n    }, [infoForm.values.email, infoForm.touched.email, infoForm.setFieldValue])\r\n\r\n    // useEffect(()=>{\r\n    //     if (infoForm.values != null && userData != null){\r\n    //         console.log(\"a\");\r\n    //         console.log(infoForm.values);\r\n    //         infoForm.values.email = userData.email;\r\n    //         infoForm.values.first_name = userData.first_name;\r\n    //         infoForm.values.last_name = userData.last_name;\r\n    //     }\r\n    // }, [userData, infoForm]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-md rounded-3 p-3 m-3\">\r\n                {/* <h2>Personal Information</h2>\r\n                <hr></hr> */}\r\n                <Divider orientation=\"left\"><h2>Personal information</h2></Divider>\r\n                <form onSubmit={infoForm.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <div className='col my-2'>\r\n                            <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n                            <input\r\n                                id=\"username\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                readOnly = {true}\r\n                                {...infoForm.getFieldProps('username')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm\">\r\n                            <label htmlFor=\"first_name\" className=\"form-label\">First name</label>\r\n                            <input \r\n                                id=\"first_name\" \r\n                                // name=\"first_name\" \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                {...infoForm.getFieldProps('first_name')}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm\">\r\n                            <label htmlFor=\"last_name\" className=\"form-label\">Last name</label>\r\n                            <input \r\n                                id=\"last_name\" \r\n                                // name=\"first_name\" \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                {...infoForm.getFieldProps('last_name')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 my-2\">\r\n                            <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                            <input \r\n                                id=\"email\" \r\n                                //name=\"email\" \r\n                                type=\"email\" \r\n                                className=\"form-control\"\r\n                                \r\n                                {...infoForm.getFieldProps('email')}\r\n                                // onChange={infoForm.handleChange}\r\n                                // value={infoForm.values.email}\r\n\r\n                            />\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                        <button className=\"btn btn-primary float-end\" type=\"submit\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AccountInfo;","import { useEffect, useState } from \"react\"\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Divider, notification } from 'antd';\r\nimport $ from 'jquery';\r\n\r\nfunction DeviceList(props){\r\n    \r\n    const [devicesData, setDevicesData] = useState(null);\r\n    const [pagination, setPagination] = useState({\r\n        current: 1,\r\n        pageSize: 10,\r\n        total: 24\r\n        \r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const updateDevices = (page, callback) => {\r\n        $.ajax({\r\n            type: 'GET',\r\n            // url: 'https://sv-communityadvocates.org/api/react/list-devices/',\r\n            url: 'https://sv-communityadvocates.org/api/react/list-devices/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            data:{\r\n                ...page,\r\n            },\r\n            error: function(response){\r\n                notification[\"error\"]({\r\n                    message: \"Get list of devices failed!\",\r\n                    description: \"Unable to retrieve the list of your devices, please try again later\"\r\n                })\r\n                console.log(response);\r\n            },\r\n            success: function(response){\r\n                console.log(response);\r\n                if (callback)\r\n                    callback(response);\r\n            }\r\n        });\r\n    }\r\n\r\n    const getDevices = (callback) => {\r\n        $.ajax({\r\n            type: 'GET',\r\n            // url: 'https://sv-communityadvocates.org/api/react/list-devices/',\r\n            url: 'https://sv-communityadvocates.org/api/react/list-devices/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            data:{\r\n                ...pagination,\r\n            },\r\n            error: function(response){\r\n                console.log(response);\r\n                notification[\"error\"]({\r\n                    message: \"Get list of devices failed!\",\r\n                    description: \"Unable to retrieve the list of your devices, please try again later\"\r\n                })\r\n            },\r\n            success: function(response){\r\n                console.log(response);\r\n                if (callback)\r\n                    callback(response);\r\n            }\r\n        });\r\n    }\r\n\r\n    const logOut = (id, callback) => {\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'https://sv-communityadvocates.org/api/react/remove-device/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            data: {\r\n                'tokenid': id,\r\n            },\r\n            error: function(response){\r\n                console.log(response);\r\n                notification.error({\r\n                    message: 'Action failed',\r\n                    description: 'An error has happened, no device is logged out'\r\n                })\r\n            },\r\n            success: function(response){\r\n                console.log(response);\r\n                notification.success({\r\n                    message: 'Device removed',\r\n                    description: 'You have logged out from a device.'\r\n                })\r\n                getDevices((response) => {\r\n                    setDevicesData(response.results);\r\n                    setPagination({\r\n                        current: pagination.current,\r\n                        pageSize: pagination.pageSize,\r\n                        total: response.count\r\n                    })\r\n                });\r\n                if (callback)\r\n                    callback(response);\r\n            }\r\n        });\r\n    }\r\n\r\n    const logOutAll = () => {\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: 'https://sv-communityadvocates.org/api/react/logout-all/',\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            error: function(response){\r\n                console.log(response);\r\n                notification.error({\r\n                    message: 'Action failed',\r\n                    description: 'An error has happened, no device is logged out'\r\n                })\r\n            },\r\n            success: function(response){\r\n                console.log(response);\r\n                notification.success({\r\n                    message: 'Device removed',\r\n                    description: 'You have logged out from all other device.'\r\n                })\r\n                getDevices((response) => {\r\n                    setDevicesData(response.results);\r\n                    setPagination({\r\n                        current: pagination.current,\r\n                        pageSize: pagination.pageSize,\r\n                        total: response.count\r\n                    })\r\n                });\r\n                \r\n            }\r\n        });\r\n    }\r\n    const handleTableChange = (tablePagination, tableFilter, tableSorter) =>{\r\n        console.log(tablePagination);\r\n        setPagination(tablePagination);\r\n        updateDevices(tablePagination, (response) => {\r\n            setDevicesData(response.results);\r\n            setPagination({\r\n                current: tablePagination.current,\r\n                pageSize: tablePagination.pageSize,\r\n                total: response.count\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDevices((response) => {\r\n            setDevicesData(response.results);\r\n            setPagination({\r\n                current: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n                total: response.count\r\n\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: 'Devices',\r\n            dataIndex: 'devices',\r\n            key: 'devices',\r\n        }, \r\n        {\r\n            title: 'Signed in date',\r\n            dataIndex: 'created',\r\n            key: 'created',\r\n            render: created => (\r\n                <div>{\r\n                    (new Date(Date.parse(created))).toString()\r\n                    }</div>\r\n            )\r\n        },\r\n        {\r\n            title:'Actions',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: id => (\r\n                <div>\r\n                    <button className=\"btn btn-danger float-end\" onClick={() =>logOut(id)}><i class=\"far fa-trash-alt\"></i></button>\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-md rounded-3 p-3 m-3\">\r\n            <Divider orientation=\"left\"><h2>List of signed in devices</h2></Divider>\r\n                {/* <h2>List of signed in devices</h2>\r\n                <hr></hr> */}\r\n                <button className=\"btn btn-danger float-end\" style={{margin:\"1rem\"}} onClick={() => logOutAll()}>Delete all</button>\r\n                <div className=\"container\">\r\n                    <Table dataSource={devicesData} columns={columns} pagination={pagination} loading={loading} onChange={handleTableChange}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceList;","import 'antd/dist/antd.css';\r\nimport { Divider,Form, Input, Button, notification, Checkbox} from 'antd';\r\nimport $ from 'jquery';\r\nimport { logoutAll } from './tools.js/logouyAll';\r\n\r\nfunction ChangePassword(props) {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish= (values) => {\r\n        \r\n        console.log(values);\r\n        $.ajax({\r\n            type: 'PATCH',\r\n            url: 'https://sv-communityadvocates.org/api/react/change-password/',\r\n            data: values,\r\n            headers: {\r\n                'Authorization': 'token ' + localStorage.token\r\n            },\r\n            error:function(response){\r\n                console.log(response);\r\n                notification['error']({\r\n                    message: 'Password update failed',\r\n                    description: 'An error happened: ' + response.responseJSON.detail\r\n                })\r\n            },\r\n            success: function(response){\r\n                console.log(response);\r\n                form.resetFields();\r\n                notification.success({\r\n                    message: 'Password update successfully',\r\n                    description: 'Your password has beed update successfully'\r\n                });\r\n                if (values.signout){\r\n                    //sign out of all  other devices\r\n                    logoutAll((response2) =>{\r\n                        notification.success({\r\n                            message: 'All device logged out successfully',\r\n                            description: 'All other devices have been logged out successfully'\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const onFinishFailed = (err) =>{\r\n        console.log(err);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"container-md rounded-3 p-3 m-3\">\r\n                <Divider orientation=\"left\"><h2>Change password</h2></Divider>\r\n              \r\n                {/* <hr></hr> */}\r\n\r\n                <Form name=\"passwordChange\"\r\n                layout=\"vertical\"\r\n                form={form}\r\n                // labelCol={{\r\n                //     span: 8,\r\n                // }}\r\n                // wrapperCol={{\r\n                //     span: 16,\r\n                // }}\r\n                initialValues={{\r\n                    old_password: '',\r\n                    new_password: '',\r\n                    repeat_new_password: '',\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}>\r\n                    <Form.Item label=\"Old password\"\r\n                    name=\"old_password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please inpupt your old password!\",\r\n                        },\r\n                    ]}>\r\n                        <input type=\"password\" className=\"form-control\"></input>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"New password\"\r\n                    name=\"new_password\"\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please inpupt your new password!\",\r\n                        },\r\n                    ]}>\r\n                        <input type=\"password\" className=\"form-control\"></input>\r\n                    </Form.Item>\r\n                        \r\n                    <Form.Item label=\"Confirm new password\"\r\n                    name=\"repeat_new_password\"\r\n                    dependencies={[\"new_password\"]}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your new password again!\",\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                                if (!value || getFieldValue('new_password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                              \r\n                                return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                            },\r\n                        }),\r\n                    ]}>\r\n                        <input type=\"password\" className=\"form-control\"></input>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"signout\" valuePropName=\"checked\">\r\n                        <Checkbox>Sign out all other devices</Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        style={{float: 'right'}} \r\n                        // wrapperCol={{\r\n                        // offset: 22,\r\n                        // // span: 4,\r\n                        // }}\r\n                    >\r\n                        <button className=\"btn btn-primary\" type=\"submit\">\r\n                        Submit\r\n                        </button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword;","import $ from 'jquery';\r\n\r\nexport const logoutAll = (callbackSuccess, callbackFail) =>{\r\n    $.ajax({\r\n        type: 'POST',\r\n        url: 'https://sv-communityadvocates.org/api/react/logout-all/',\r\n        headers: {\r\n            'Authorization': 'token ' + localStorage.token\r\n        },\r\n        error: function(response){\r\n            console.log(response);\r\n            if (callbackFail)\r\n                callbackFail(response);\r\n        },\r\n        success: function(response){\r\n            console.log(response);\r\n            if (callbackSuccess)\r\n                callbackSuccess(response);\r\n            \r\n        }\r\n    });\r\n}","import React from 'react'; \r\nimport Navbar from '@whitworth/svca-website.ui.navbar';\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { getLogin } from '@whitworth/svca-website.utilities.login';\r\nimport { Layout, Menu } from 'antd';\r\nimport AccountInfo from './AccountInfo';\r\nimport DeviceList from './DeviceList';\r\nimport ChangePassword from './ChangePassword';\r\nimport $ from 'jquery';\r\nimport Sidebar from '@whitworth/svca-website.ui.sidebar';\r\n// import Sidebar from './Sidebar';\r\n\r\nimport {\r\n  SettingOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  UserOutlined,\r\n  UsergroupAddOutlined,\r\n  UploadOutlined,\r\n  BarsOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Content, Sider } = Layout\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      collapsed: true,\r\n      isSuperUser: false,\r\n      groups: [],\r\n    };\r\n\r\n    \r\n\r\n\r\n    getLogin((response) => {\r\n      console.log(response);\r\n      this.setState({\r\n        username: response.username,\r\n        firstname: response.first_name,\r\n        groups: response.groups,   \r\n      });\r\n    })\r\n\r\n    this.checkPermission(\"is_super_user\", (response) => {\r\n      this.setState({isSuperUser: true});\r\n    }, (response) => {\r\n      this.setState({isSuperUser: false});\r\n    })\r\n    this.toggle = this.toggle.bind(this);\r\n    this.checkPermission = this.checkPermission.bind(this);\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  checkPermission = (perm, successcallback, failcallback) => {\r\n    $.ajax({\r\n      type: \"POST\",\r\n      url: 'https://sv-communityadvocates.org/api/react/check-permission/',\r\n      headers: {\r\n        'Authorization': 'token ' + localStorage.token\r\n      },\r\n      data:{\r\n        'permission': perm,\r\n      },\r\n      error: function(response) {\r\n        if (failcallback) \r\n          failcallback(response);\r\n      },\r\n      success: function(response){\r\n        if (successcallback)\r\n          successcallback(response);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Layout>\r\n          <Navbar siteName=\"SVCA\" username={this.state.username}/>\r\n          <Layout>\r\n            <Sider theme=\"light\" trigger={null} collapsible collapsed={this.state.collapsed}>\r\n              <Sidebar permission_groups={this.state.groups} selected=\"2\" collapsed={this.state.collapsed} toggle={() => this.toggle()}/>\r\n            </Sider>\r\n\r\n            <Layout className=\"site-layout\" style={{background:\"white\"}}>\r\n              <Content className=\"site-layout-background\">\r\n                <div className=\"container\">\r\n                  <h1>My Account</h1>\r\n                \r\n                  <AccountInfo/>\r\n                  <ChangePassword/>\r\n                  <DeviceList/>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n          \r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}