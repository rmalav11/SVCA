{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","recaptchaRef","React","useRef","onFinish","values","a","console","log","current","executeAsync","token","reset","$","ajax","type","url","data","error","response","notification","message","description","responseJSON","detail","success","window","location","href","className","labelCol","xs","span","sm","wrapperCol","Item","name","label","rules","required","hasFeedback","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","style","float","htmlType","ref","sitekey","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAoKeA,MA7Jf,WACE,IAmBMC,EAAeC,IAAMC,SAErBC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACfC,QAAQC,IAAI,gBAAiBH,GADd,SAGMJ,EAAaQ,QAAQC,eAH3B,OAGfL,EAAOM,MAHQ,OAIfJ,QAAQC,IAAIH,GACZJ,EAAaQ,QAAQG,QACrBC,IAAEC,KAAK,CACLC,KAAM,OACNC,IAAK,sDACLC,KAAMZ,EACNa,MAAO,SAASC,GACdZ,QAAQC,IAAI,SAAUW,GACtBC,IAAY,MAAU,CACpBC,QAAS,iBACTC,YAAaH,EAASI,aAAaC,UAIvCC,QAAS,SAASN,GAChBC,IAAY,QAAY,CACtBC,QAAS,uBACTC,YAAa,+CAIfI,OAAOC,SAASC,KAAO,qBAzBZ,2CAAH,sDA6Bd,OACE,8BACE,sBAAKC,UAAU,sBAAf,UACE,oBAAIA,UAAU,mBAAd,yBACA,eAAC,IAAD,2BAtDiB,CACrBC,SAAU,CACRC,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,IAGVE,WAAY,CACVH,GAAI,CACFC,KAAM,IAERC,GAAI,CACFD,KAAM,OAwCN,IAEE5B,SAAUA,EAFZ,UAIE,cAAC,IAAK+B,KAAN,CACEC,KAAK,aACLC,MAAM,aACNC,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,kCANf,SAWE,cAAC,IAAD,MAGF,cAAC,IAAKc,KAAN,CACEC,KAAK,YACLC,MAAM,YACNC,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,iCANf,SAWE,cAAC,IAAD,MAGF,cAAC,IAAKc,KAAN,CAAWC,KAAK,QAAQC,MAAM,QAAQC,MAAO,CAC3C,CACEvB,KAAK,QACLM,QAAS,kCAEX,CACEkB,UAAU,EACVlB,QAAS,4BAPb,SAWE,cAAC,IAAD,MAEF,cAAC,IAAKc,KAAN,CACEC,KAAK,WACLC,MAAM,WACNC,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,gCAGbmB,aAAW,EATb,SAWE,cAAC,IAAMC,SAAP,MAGF,cAAC,IAAKN,KAAN,CACEC,KAAK,UACLC,MAAM,mBACNK,aAAc,CAAC,YACfF,aAAW,EACXF,MAAO,CACL,CACEC,UAAU,EACVlB,QAAS,iCAEX,gBAAGsB,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,OAAKA,GAASH,EAAc,cAAgBG,EAIrCC,QAAQC,OAAO,IAAIC,MAAM,qDAHvBF,QAAQG,cAbzB,SAqBE,cAAC,IAAMT,SAAP,MAEF,cAAC,IAAKN,KAAN,CAAWD,WAAY,CAACF,KAAK,IAA7B,SACE,oBAAGmB,MAAO,CAACC,MAAM,SAAjB,sCAAoD,mBAAGxB,KAAK,gBAAR,qBAApD,gBAGF,cAAC,IAAKO,KAAN,CAAWD,WAAY,CAACF,KAAK,IAA7B,SACE,cAAC,IAAD,CAAQjB,KAAK,UAAUsC,SAAS,SAASF,MAAO,CAACC,MAAM,SAAvD,wBAOF,cAAC,IAAD,CAAWE,IAAKrD,EAAcsD,QAAQ,2CAA2CC,KAAK,wBChJjFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.22b31b84.chunk.js","sourcesContent":["import 'antd/dist/antd.css';\nimport React from 'react';\nimport { Button, Form, Input, notification } from 'antd';\nimport './App.css';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport $ from 'jquery';\n\nfunction App() {\n  const formItemLayout = {\n    labelCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 8,\n      },\n    },\n    wrapperCol: {\n      xs: {\n        span: 24,\n      },\n      sm: {\n        span: 16,\n      },\n    },\n  };\n\n  const recaptchaRef = React.useRef();\n\n  const onFinish = async (values) =>{\n    console.log(\"Form values: \", values);\n    // console.log(\"captcha value: \", recaptchaRef.current.execute())\n    values.token = await recaptchaRef.current.executeAsync();\n    console.log(values);\n    recaptchaRef.current.reset();\n    $.ajax({\n      type: 'POST',\n      url: 'https://sv-communityadvocates.org/api/react/signup/',\n      data: values,\n      error: function(response){\n        console.log('Error:', response);\n        notification['error']({\n          message: 'Sign up failed',\n          description: response.responseJSON.detail,\n        });\n        \n      },\n      success: function(response){\n        notification['success']({\n          message: \"Sign up successfully\",\n          description: \"You have successfully sign up your account\",\n        });\n\n        // redirect to profile page?\n        window.location.href = \"/admin/profile/\"\n      }\n    })\n  }\n  return (\n    <div>\n      <div className=\"container login-div\">\n        <h2 className=\"text-center pb-4\">User signup</h2>\n        <Form\n          {...formItemLayout}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name=\"first_name\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your first name!',\n              },\n            ]}\n            \n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            name=\"last_name\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your last name!',\n              },\n            ]}\n            \n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item name=\"email\" label=\"Email\" rules={[\n            {\n              type:'email',\n              message: 'The input is not a valid Email',\n            },\n            {\n              required: true,\n              message: 'Please input your email'\n            }\n          ]}\n          >\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            label=\"Password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"confirm\"\n            label=\"Confirm Password\"\n            dependencies={['password']}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve();\n                  }\n\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item wrapperCol={{span:24}}>\n            <p style={{float:\"right\"}}>Already have an account? <a href=\"/admin/login/\">sign in</a> instead</p>\n          </Form.Item>\n\n          <Form.Item wrapperCol={{span:24}}>\n            <Button type=\"primary\" htmlType=\"submit\" style={{float:'right'}}>\n              Register\n            </Button>\n          </Form.Item>\n\n          \n\n          <ReCAPTCHA ref={recaptchaRef} sitekey=\"6Lc_7pMbAAAAAJRcdqCiTkI16SR6MwRUKqsHFR9P\" size=\"invisible\"/>\n      \n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}